1. GitHub Repository Scanner has been deployed!

Configuration:
  - Organization: {{ .Values.github.organization }}
  - NATS URL: {{ .Values.nats.url }}
  - NATS Subject: {{ .Values.nats.subject }}
  - Cron Schedule: {{ .Values.cron.schedule }}
  - Run on Startup: {{ .Values.cron.runOnStartup }}

2. To check the pod status:
   kubectl get pods -l "app.kubernetes.io/name={{ include "secflow-collector.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

3. To view logs:
   kubectl logs -f deployment/{{ include "secflow-collector.fullname" . }}

4. Important Notes:
   {{- if not .Values.github.organization }}
   ‚ö†Ô∏è  WARNING: GitHub organization is not set! The scanner will fail to start.
      Set it using: --set github.organization=YOUR_ORG
   {{- end }}

   {{- if eq .Values.github.tokenSecretName "github-token" }}
   üìå Make sure you have created the GitHub token secret:
      kubectl create secret generic github-token --from-literal=token=YOUR_GITHUB_TOKEN
   {{- end }}

   {{- if .Values.cron.runOnStartup }}
   ‚úÖ The scanner will run immediately after deployment
   {{- else }}
   ‚è∞ The scanner will run according to schedule: {{ .Values.cron.schedule }}
   {{- end }}

5. Next Steps:
   - Monitor NATS queue for published repository messages
   - Set up consumers to process repository data
   - Configure monitoring/alerting as needed

For more information, visit: https://github.com/klimeurt/secflow-collector